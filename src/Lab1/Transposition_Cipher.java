/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Lab1;

/**
 *
 * @author ntluong
 */
public class Transposition_Cipher extends javax.swing.JFrame {

    /**
     * Creates new form Transposition_Cipher
     */
    public Transposition_Cipher() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtVanBan = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMaHoa = new javax.swing.JTextArea();
        btnMaHoa = new javax.swing.JButton();
        btnGiaiMa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Thuật Toán Mã Hóa Transposition Cipher");

        jLabel2.setText("Plaintext:");

        txtVanBan.setColumns(20);
        txtVanBan.setRows(5);
        jScrollPane1.setViewportView(txtVanBan);

        jLabel3.setText("Ciphertext: ");

        txtMaHoa.setColumns(20);
        txtMaHoa.setRows(5);
        jScrollPane2.setViewportView(txtMaHoa);

        btnMaHoa.setText("v Encypt v");
        btnMaHoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaHoaActionPerformed(evt);
            }
        });

        btnGiaiMa.setText("^ Dencypt ^");
        btnGiaiMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiaiMaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(btnMaHoa)
                        .addGap(54, 54, 54)
                        .addComponent(btnGiaiMa))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2)))
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnMaHoa))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGiaiMa)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMaHoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaHoaActionPerformed
        // TODO add your handling code here:
        char letter[]= new char [25];
                        String plainText,cipherText="",jpt="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
                        int c=0,l=1,v=0,i=0,t=1,vc=0,r=0;
                        char mat[][]=new char[50][50];                        
        int key[]={4,3,1,2,5,6,7};
        char z;
        System.out.println("Enter the plain text:");
        plainText=txtVanBan.getText();        
        for(i=0;i<c+1;i++)
        {
            for(int j=0;j<key.length;j++)
            {
                if(c<plainText.length())
                {
                    char a=plainText.charAt(c);
                    mat[i][j]=a;
                    c++;
                    v=i+1;
                }
                if(c==plainText.length()&&j!=vc)
                {
                    r=key.length-j;
                    if(r<=jpt.length())
                    {
                        z=jpt.charAt(jpt.length()-r);
                        mat[i][j+1]= z;
                    }
                }
            }
         t=2;       
         if(c==plainText.length()&&r==0)       
         {         
             i=c+2;       
         }
        }
        c=1;
        while(c<=key.length)    
        {
         for(i=0;i<key.length;i++)
           {
             if(key[i]==c)
              {
                int k=0;
                for(l=0;l<v;l++)
                {
                cipherText=cipherText+mat[k][i];
                k++;
                }
              }
            }
            c++;
        }
            cipherText=cipherText.toUpperCase();
            System.out.println("\nThe Cipher Text is:\n"+cipherText);
            txtMaHoa.setText(cipherText.toString().toUpperCase());
    }//GEN-LAST:event_btnMaHoaActionPerformed

    private void btnGiaiMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiaiMaActionPerformed
        // TODO add your handling code here:
                        String plainText="",cipherText="",jpt="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
                        int c=0,l=1,v=0,i=0,j=0,k=0;
                        char mat[][]=new char[50][50];
                        char pmat[][]=new char[50][50];                        
                        int key[]={4,3,1,2,5,6,7};
        char z;
        System.out.println("Enter the plain text:");
        cipherText=txtMaHoa.getText();
        txtVanBan.setText(cipherText.toString().toUpperCase());
        v=(cipherText.length()/key.length);
        while(c<key.length)
        {
            for(j=0;j<key.length;j++)
            {
                if(key[j]==c+1)
                {
                    for(i=0;i<v;i++)
                    {
                        mat[i][j]=cipherText.charAt(k);
                        k++;
                    }                   
                }
            }
            c++;           
        }
        for(int p=0;p<4;p++)
        {
            for(int q=0;q<key.length;q++)
            {
                plainText= plainText+mat[p][q];
            }
        }
            System.out.println("\nThe Cipher Text is:\n"+plainText);
            txtMaHoa.setText(plainText.toString().toUpperCase());
    }//GEN-LAST:event_btnGiaiMaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transposition_Cipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transposition_Cipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transposition_Cipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transposition_Cipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transposition_Cipher().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGiaiMa;
    private javax.swing.JButton btnMaHoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtMaHoa;
    private javax.swing.JTextArea txtVanBan;
    // End of variables declaration//GEN-END:variables
}
//vd: bao mat
// cot1    cot2
// b        m
// a        a
// o        t
// va lay thu tu 2 1 => mbaato
